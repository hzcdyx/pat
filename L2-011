#include <iostream>
#include <bits/stdc++.h>
using namespace std; 
/* run this program using the console pauser or add your own getch, system("pause") or input loop */
int num=0,n;
int inorder[10005],preorder[10005];
struct node{
	int data;
	node* lchild;
	node* rchild;
};
node* create(int prel,int prer,int inl,int inr)
{
	int t,length,i;
	if(prel>prer)
	{
		return NULL;
	}
	node* root=new node;
	root->data=preorder[prel];
	for(i=inl;i<=inr;i++)
	{
		if(inorder[i]==preorder[prel])
		{
			break;
		}
	}
	length=i-inl;
	root->lchild=create(prel+1,prel+length,inl,i-1);
	root->rchild=create(prel+length+1,prer,i+1,inr);
	return root;
}
void bfs(node* root)
{
	queue<node*> qu;
	qu.push(root);
	while(!qu.empty())
	{
		node* now=qu.front();
		printf("%d",now->data);
		qu.pop();
		num++;
		if(num!=n)
		{
			printf(" ");
	}
	if(now->rchild!=NULL){
		qu.push(now->rchild);
	}
	if(now->lchild!=NULL){
		qu.push(now->lchild);
	}
	}
}
int main(int argc, char** argv) {
	int i,j,m;
	cin>>n;

	for(i=0;i<n;i++)
	{
	cin>>inorder[i];
	}
	for(i=0;i<n;i++)
	{
	cin>>preorder[i];
	}
	node* root=create(0,n-1,0,n-1);
	bfs(root);
	return 0;
}
