#include <bits/stdc++.h>
using namespace std; 
const int maxn=10000;
int jinzhi[25],jiaa[25],jiab[25],res[55],hobby[1100],vis[100010],bei[100010];
vector<int> a[100010];
	double r,sum;
/* run this program using the console pauser or add your own getch, system("pause") or input loop */
//struct node{
//	int data;
//	node* left;
//	node* right;
//};
void dfs(int n,double z)
{
	vis[n]=1;
	if(bei[n]!=0)
	{
	sum+=bei[n]*z;
	}
	else{
		z=z*(100-r)*0.01;
		for(int i=0;i<a[n].size();i++)
		{
			if(vis[a[n][i]]==0)
			{
					dfs(a[n][i],z);
			}
		
		}
	}
}
bool cmp(int a,int b)
{
	return a>b;
}
//int fa[maxn];
//void init()
//{
//	for(int i=0;i<maxn;i++)
//	{
//		fa[i]=i;
//	}
//}
//int find(int s)
//{
//	int m=s;
//	while(s!=fa[s])
//	{
//		s=fa[s];
//	}
//	while(m!=fa[m])
//	{
//		int z=m;
//		m=fa[m];
//		fa[z]=s;
//	}
//	return s;
//}
//void unionn(int a,int b)
//{
//	if(find(a)!=find(b))
//	{
//		fa[find(a)]=find(b);
//	}
//}
//void disaj(int s)
//{
//	memset(dis,0,sizeof(dis));
//	memset(vis,0,sizeof(vis));
//	dis[n]=0;
//	for(i=0;i<n;i++)
//	{
//		int mind=INT_MAX;
//		int u;
//	for(j=0;j<n;j++)	
//	{
//		if(!vis[j])
//		{
//		if(vis[j]<mind)	
//		{
//			u=j;
//			mind=vis[j];
//		}
//		}
//		vis[u]=1;
//	}
//	for(j=0;j<n;j++)
//	{
//		if(dis[u]+g[u][j]<dis[j])
//		{
//			dis[j]=dis[u]+g[u][j];
//		}
//		else if(dis[u]+g[u][j]==dis[j])
//	}
//	}
//}
int main(int argc, char** argv) 
{
	int x,m,n,h=0,t,y,w,i,j,nu[1100];
	double z;
	cin>>n>>z>>r;
	memset(vis,0,sizeof(vis));
	for(i=0;i<n;i++)
	{
		cin>>t;
		if(t!=0)
		{
		for(j=0;j<t;j++)
		{
			cin>>m;
			a[i].push_back(m);
		}
			
		}
		else{
			cin>>m;
			bei[i]=m;
		}
		
	}
	sum=0;
	dfs(0,z);
	cout<<(int)sum<<endl;
	return 0;
}
