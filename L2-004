#include <iostream>
#include <bits/stdc++.h>
using namespace std; 
/* run this program using the console pauser or add your own getch, system("pause") or input loop */
int num=0,n;
struct node{
	int data;
	node* lchild;
	node* rchild;
};
void insert(node* &root,int data)
{
	if(root==NULL)
	{
		root=new node;
		root->data=data;
		root->lchild=NULL;
		root->rchild=NULL;
		return;
	}
	else{
		if(data<root->data)
		{
			insert(root->lchild,data);
		}
		else{
			insert(root->rchild,data);
		}
	}
}
void preorder(node* root,vector<int>& vi)
{
	if(root==NULL)
	{
		return;
	}
	else{
		vi.push_back(root->data);
		preorder(root->lchild,vi);
		preorder(root->rchild,vi);
	}
}
void premorder(node* root,vector<int>& vi)
{
	if(root==NULL)
	{
		return;
	}
	else{
		vi.push_back(root->data);
		premorder(root->rchild,vi);
		premorder(root->lchild,vi);
	}
}
void postorder(node* root,vector<int>& vi)
{
	if(root==NULL)
	{
		return;
	}
	else{
		
		postorder(root->lchild,vi);
		postorder(root->rchild,vi);
		vi.push_back(root->data);
	}
}
void postmorder(node* root,vector<int>& vi)
{
	if(root==NULL)
	{
		return;
	}
	else{
	
		postmorder(root->rchild,vi);
		postmorder(root->lchild,vi);
		vi.push_back(root->data);
	}
}
vector<int> ori,pre,prem,post,postm;
int main(int argc, char** argv) {
	int i,j,m;
	cin>>n;
	node* root=NULL;
	for(i=0;i<n;i++)
	{
		cin>>m;
		ori.push_back(m);
		insert(root,m);
		
	}
	preorder(root,pre);
	premorder(root,prem);
	postorder(root,post);
	postmorder(root,postm);
	if(ori==pre)
	{
		printf("YES\n");
		for(i=0;i<post.size();i++)
		{
			printf("%d",post[i]);
			if(i<post.size()-1)
			{
				printf(" ");
			}
		}
	}
	else if(ori==prem)
	{
		printf("YES\n");
		for(i=0;i<post.size();i++)
		{
			printf("%d",postm[i]);
			if(i<post.size()-1)
			{
				printf(" ");
			}
		}
		
	}
	else{
		printf("NO\n");
	}
	return 0;
}
