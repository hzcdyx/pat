#include <bits/stdc++.h>
using namespace std; 
/* run this program using the console pauser or add your own getch, system("pause") or input loop */
struct node{
	int l,r;
	
}tree[50];
int a[50],b[50],n,ans[50];
int build(int la,int ra,int lb,int rb)
{
	int p;
	if(la<ra){
		return 0;
	}
	if(lb<rb){
		return 0;
	}
	int i=lb;
	int root=a[ra];
	while(b[i]!=root){
		i++;
	}
	p=i-lb;
	tree[root].l=build(la,la+p-1,lb,i-1);
	tree[root].r=build(la+p,ra-1,i+1,rb);
	return root;
}
void bfs()
{
	int i,tt=0;
	queue<int> q;
	q.push(a[n-1]);
	int temp=a[n-1];
	while(!q.empty())
	{
		temp=q.front();
		q.pop();
		if(temp==0)
		{
			break;
		}
		ans[tt++]=temp;
		if(tree[temp].l!=0)
		{
			q.push(tree[temp].l);
		}
		if(tree[temp].r!=0)
		{
			q.push(tree[temp].r);
		}
	}
	for(i=0;i<n;i++)
	{
		if(i!=n-1){
			printf("%d ",ans[i]);
		} 
		else{
			printf("%d",ans[i]);
		}
		 
	}
}
int main(int argc, char** argv) {
	int i,j,m,num,t;
	cin>>n;

	for(i=0;i<n;i++)
	{
		cin>>a[i];
	}
	for(i=0;i<n;i++)
	{
		cin>>b[i];
	}
	build(0,n-1,0,n-1);
	bfs();
	return 0;
}
