#include <iostream>
#include <bits/stdc++.h>
using namespace std;
vector<int> child[100010];
double val[100010]={0};
double sum,z,r;
/* run this program using the console pauser or add your own getch, system("pause") or input loop */
void f(int n,double w)
{
	int i;
	if(val[n]==0) 
	{
		for(i=0;i<child[n].size();i++)
		{
			f(child[n][i],w*r);
		}
		
	}
	else{
		sum+=w*val[n];
	}
}
int main(int argc, char** argv) {
	int n,i,m,j,t;
    int sum=0;
	scanf("%d %lf %lf",&n,&z,&r);
	r=(100-r)/100;
	for(i=0;i<n;i++)
	{
	cin>>m;
	if(m==0)
	{
		cin>>val[i];
	}
	else{
	for(j=0;j<m;j++)
	{
		cin>>t;
		child[j].push_back(t);
	}
}
	}
	f(0,z);
	cout<<sum;
	return 0;
}
//#include<bits/stdc++.h>
//#include<cstring>
//#include<algorithm>
//using namespace std;
//vector<int> child[100005];      //储存徒弟的容器
//
//double z,r,sum;
//double val[100005];        //判断是否得道者和储存得道者倍数
//
//
//void f(int id,double w)  //表示第id个人，w表示传承下来的功力值
//{
//	if(val[id]){      //当倍数不为0，即是得道者，乘以倍数加到sum
//		sum=sum+w*val[id];
//	}else{
//		for(int i=0;i<child[id].size();i++){
//			f(child[id][i],w*r);              //把每个徒弟往下递归，传授给徒弟的功力值为w*r
//		}
//	}
//	return ;
//}
//int main()
//{
//	memset(val,0,sizeof(val));     //初始化部分
//	sum=0;
//	
//	int n,m,k;
//	scanf("%d %lf %lf",&n,&z,&r);
//	r=(100-r)/100;                //题目为削弱r%,所以直接替换掉了
//	
//	for (int i = 0; i < n; i++) {
//		scanf("%d",&m);          //m来判断是否为得道者
//		
//		if (!m) {                //得道者，所以倍数储存到val[]里
//			scanf("%lf",&val[i]);
//		}else{
//			for (int j = 0; j <m; j++) {    //不是得道者，依序储存到child[]容器里
//				scanf("%d",&k);
//				child[i].push_back(k);
//			}
//		}
//	}
//	
//	f(0,z);       //递归遍历,从0号祖师爷开始，功力为z
//	
//	printf("%d\n",(int)sum);     //保留整数输出
//
//	return 0;
//}
